.deploy_wallet: &deploy_wallet
    - echo "Deploying image with tag $DOCKER_IMAGE_TAG -- https://hub.docker.com/r/jimber/wallet"
    - docker pull jimber/wallet:$DOCKER_IMAGE_TAG
    - docker rm -f wallet || true
    - docker run -d -it --restart=unless-stopped --network=$DOCKER_NETWORK --name wallet jimber/wallet:$DOCKER_IMAGE_TAG
    - curl -s -X POST "https://api.telegram.org/bot868129294:AAGLGOySYvJJxvIcMHY3XHFaPEPq2MpdGys/sendMessage" -d parse_mode=markdown -d chat_id=-1001186043363 -d parse_mode=markdown -d text="Deployed $ENVIROMENT_NAME wallet version:$CI_COMMIT_REF_NAME commit:$CI_COMMIT_SHORT_SHA"

.deploy_wallet_beta: &deploy_wallet_beta
    - echo "Deploying image with tag $DOCKER_IMAGE_TAG -- https://hub.docker.com/r/jimber/wallet"
    - docker pull jimber/wallet:$DOCKER_IMAGE_TAG
    - docker rm -f wallet_beta || true
    - docker run -d -it --restart=unless-stopped --network=jimber_proxy_net --name wallet_beta -p 8888:80 jimber/wallet:$DOCKER_IMAGE_TAG
    - curl -s -X POST "https://api.telegram.org/bot868129294:AAGLGOySYvJJxvIcMHY3XHFaPEPq2MpdGys/sendMessage" -d parse_mode=markdown -d chat_id=-1001186043363 -d parse_mode=markdown -d text="(Beta)Deployed $ENVIROMENT_NAME wallet version:$CI_COMMIT_REF_NAME commit:$CI_COMMIT_SHORT_SHA"

.set_ci_version: &set_ci_version
    - eval "[ -z "$CI_COMMIT_TAG" ] && export VERSION=$CI_COMMIT_SHORT_SHA || export VERSION=$CI_COMMIT_TAG "
    - sed -i "s/{{version}}/$VERSION/g" public/version.js

.build_wallet: &build_wallet
    - docker build -t jimber/wallet:$DOCKER_IMAGE_TAG .
    - echo "$DOCKER_PW" | docker login -u $DOCKER_USER --password-stdin
    - echo $DOCKER_IMAGE_TAG
    - docker push jimber/wallet:$DOCKER_IMAGE_TAG

cache:
    paths:
        - node_modules/
        - .yarn

stages:
    - test
    - build
    - deploy

test:
    stage: test
    tags:
        - builder
    script:
        - echo "Testing image with tag $DOCKER_IMAGE_TAG"
build:
    stage: build
    dependencies:
        - test
    variables:
        DOCKER_IMAGE_TAG: '${CI_COMMIT_SHORT_SHA}'
    tags:
        - builder
    script:
        - *set_ci_version
        - *build_wallet

deploy:testing:
    stage: deploy
    when: manual
    variables:
        GIT_STRATEGY: none
        GIT_CHECKOUT: 'false'
        ENVIROMENT_NAME: testing
        DOCKER_IMAGE_TAG: '${CI_COMMIT_SHORT_SHA}'
        DOCKER_NETWORK: jimber_proxy_net
    tags:
        - testing
    script:
        - *deploy_wallet
    dependencies:
        - build

deploy:staging:
    stage: deploy
    when: manual
    variables:
        GIT_STRATEGY: none
        GIT_CHECKOUT: 'false'
        ENVIROMENT_NAME: staging
        DOCKER_IMAGE_TAG: '${CI_COMMIT_SHORT_SHA}'
        DOCKER_NETWORK: jimber_proxy_net

    tags:
        - staging
    script:
        - *deploy_wallet
    dependencies:
        - build

deploy:production:
    stage: deploy
    when: manual
    only:
        - /^v(\d+\.)?(\d+\.)?(\*|\d+)(-hf\d+)?$/
    variables:
        ENVIROMENT_NAME: production
        DOCKER_IMAGE_TAG: '${CI_COMMIT_SHORT_SHA}'
        DOCKER_NETWORK: 3proxynet
    tags:
        - production
    script:
        - *deploy_wallet
    dependencies:
       - build

deploy:production_beta:
    stage: deploy
    when: manual
    variables:
        ENVIROMENT_NAME: production_beta
        DOCKER_IMAGE_TAG: '${CI_COMMIT_SHORT_SHA}'
        DOCKER_NETWORK: jimber_proxy_net
    tags:
        - production_beta
    script:
        - *deploy_wallet_beta
    dependencies:
       - build
